import time

from telebot import types
from telebot.types import Message

from database import (
    take_users, take_messages,
    take_user_telegram_id, delete_invalid_user
    )
from bot_instance import bot
from utils import split_text
from balance import checking_balance
from const import ADMIN_IDS


def admin_menu(message: Message) -> None:

    if message.from_user.id not in ADMIN_IDS:
        bot.send_message(
            chat_id=message.chat.id,
            text="‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
        return

    markup = types.InlineKeyboardMarkup()
    show_users = types.InlineKeyboardButton(
        text='–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        callback_data='show_users'
    )

    show_balance = types.InlineKeyboardButton(
        text='–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å',
        callback_data='show_balance',
    )

    show_history = types.InlineKeyboardButton(
        '–ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π', callback_data='show_history',
    )
    setup_mailing = types.InlineKeyboardButton(
        text='–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É', callback_data='take_mailing_message',
    )

    markup.add(show_users)
    markup.add(show_history)
    markup.add(show_balance)
    markup.add(setup_mailing)

    bot.send_message(
        chat_id=message.chat.id,
        text="üîê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:",
        reply_markup=markup
    )


def show_users(message: Message) -> None:
    menu_markup = types.InlineKeyboardMarkup()
    menu_admin = types.InlineKeyboardButton(
        text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu_admin',
    )
    menu_markup.add(menu_admin)

    users = take_users()

    split_users = split_text(users)

    bot.send_message(
        chat_id=message.chat.id,
        text=split_users,
        reply_markup=menu_markup,
    )


def show_balance(message: Message) -> None:
    menu_markup = types.InlineKeyboardMarkup()
    menu_admin = types.InlineKeyboardButton(
        text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu_admin',
    )
    menu_markup.add(menu_admin)

    bot.send_message(
        text=checking_balance(),
        chat_id=message.chat.id,
        reply_markup=menu_markup,
    )


def show_message(message: Message) -> None:
    menu_markup = types.InlineKeyboardMarkup()
    menu_admin = types.InlineKeyboardButton(
        text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu_admin',
    )
    menu_markup.add(menu_admin)

    messages = take_messages()

    split_messages = split_text(messages)

    bot.send_message(
        chat_id=message.chat.id,
        text=split_messages,
        reply_markup=menu_markup
    )


def take_mailing_message(message: Message):
    bot.send_message(
        chat_id=message.chat.id,
        text="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"
    )
    bot.register_next_step_handler(message, mailing)


def mailing(message: Message) -> None:
    users = take_user_telegram_id()
    msg = message.text
    if not users:
        bot.send_message(message.chat.id, "‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏")
        return
    success = 0
    errors = 0
    error_details = []

    for user in users:
        chat_id = user[0]
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ chat_id
            if not isinstance(chat_id, int):
                errors += 1
                error_details.append(f"Invalid ID: {chat_id}")
                continue

            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π 0.5 —Å–µ–∫ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤ API
            bot.send_message(chat_id=chat_id, text=msg)
            success += 1
            time.sleep(0.5)

        except Exception as e:
            errors += 1
            error_details.append(f"{chat_id}: {str(e)}")
            # –£–¥–∞–ª—è–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
            delete_invalid_user(chat_id)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    report = (
        f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—Å—ã–ª–∫–∏:\n"
        f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {success}\n"
        f"‚ùå –û—à–∏–±–æ–∫: {errors}\n"
        f"‚öô –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫:\n" + "\n".join(error_details[:5])  # –ü–µ—Ä–≤—ã–µ 5 –æ—à–∏–±–æ–∫
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    bot.send_message(
        chat_id=ADMIN_IDS[0],
        text=report[:4000]  # –û–±—Ä–µ–∑–∞–µ–º –¥–æ –ª–∏–º–∏—Ç–∞ Telegram
    )
    try:
        for user in users:
            bot.send_message(
                chat_id=user[0],
                text=msg
            )
    except Exception as e:
        bot.send_message(
            chat_id=ADMIN_IDS[0],
            text=f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–∞—Å—Å—ã–ª–∫–∏: {e}'
        )
